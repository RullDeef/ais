{{ define "filters-panel" }}
<style>
.btn-toggle {
    display: inline-flex;
    align-items: center;
    padding: .25rem .5rem;
    font-weight: 600;
    color: rgba(0, 0, 0, .65);
    background-color: transparent;
    border: 0;
}

.btn-toggle:hover,
.btn-toggle:focus {
    color: rgba(0, 0, 0, .85);
    background-color: #d2f4ea;
}

.btn-toggle::before {
    width: 1.25em;
    line-height: 0;
    content: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'%3e%3cpath fill='none' stroke='rgba%280,0,0,.5%29' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M5 14l6-6-6-6'/%3e%3c/svg%3e");
    transition: transform .35s ease;
    transform-origin: .5em 50%;
}

.btn-toggle[aria-expanded="true"] {
    color: rgba(0, 0, 0, .85);
}

.btn-toggle[aria-expanded="true"]::before {
    transform: rotate(90deg);
}
</style>

<iframe name="hiddenFrame" width="0" height="0" border="0" style="display: none;"></iframe>

<form id="filter-form" action="/api/filter" method="POST" target="hiddenFrame">
    <div class="d-flex flex-column flex-shrink-0 p-3" style="width: 300px; position: absolute; left: 0">
        <button id='genres-toggle-button' class="btn btn-toggle align-items-center rounded collapsed" data-bs-toggle="collapse" data-bs-target="#genres-list" type="button" onclick="toggleGenres()">Genres</button>
        <div class="form-check collapse" id="genres-list">
            {{ range .GenreOptions }}
                <input id="{{ .ID }}" class="form-check-input filter-checkbox" type="checkbox" name="genre" value="{{ .Label }}"/>
                <label>{{ .Label }}</label><br />
            {{ end }}
        </div>
        <input class="btn btn-secondary" type="submit" value="apply" />
        <button class="btn btn-outline-danger" type="button" onclick="clearFilters()">clear all</button>
    </div>
</form>

<script>
window.addEventListener('load', function(event) {
    // load toggle states
    if (localStorage.getItem('toggle-genres') == 'true') {
        document.querySelector('#genres-list').classList.add('show')
        document.querySelector('#genres-toggle-button').ariaExpanded = true
    }

    document.querySelector('#filter-form').addEventListener('submit', function(event) {
        location.reload()
    })

    const genreInputs = document.querySelectorAll('.filter-checkbox')
    for (let inp of genreInputs) {
        inp.checked = localStorage.getItem(inp.id) == "true"
        inp.addEventListener('change', genreUpdater)
    }
})

function toggleGenres(event) {
    const shown = document.querySelector('#genres-toggle-button').ariaExpanded
    localStorage.setItem('toggle-genres', shown)
}

function genreUpdater(event) {
    const key = event.target.id
    const value = event.target.checked
    localStorage.setItem(key, value)
}

function clearFilters() {
    for (let input of document.querySelectorAll('.filter-checkbox')) {
        input.checked = false
        localStorage.removeItem(input.id)
    }
}
</script>
{{ end }}
