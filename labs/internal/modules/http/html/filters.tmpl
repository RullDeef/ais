{{ define "filters-panel" }}
<style>
.btn-toggle {
    display: inline-flex;
    align-items: center;
    padding: .25rem .5rem;
    font-weight: 600;
    color: rgba(0, 0, 0, .65);
    background-color: transparent;
    border: 0;
}

.btn-toggle:hover,
.btn-toggle:focus {
    color: rgba(0, 0, 0, .85);
    background-color: #d2f4ea;
}

.btn-toggle::before {
    width: 1.25em;
    line-height: 0;
    content: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'%3e%3cpath fill='none' stroke='rgba%280,0,0,.5%29' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M5 14l6-6-6-6'/%3e%3c/svg%3e");
    transition: transform .35s ease;
    transform-origin: .5em 50%;
}

.btn-toggle[aria-expanded="true"] {
    color: rgba(0, 0, 0, .85);
}

.btn-toggle[aria-expanded="true"]::before {
    transform: rotate(90deg);
}
</style>

<iframe name="hiddenFrame" width="0" height="0" border="0" style="display: none;"></iframe>

<form id="filter-form" action="/api/filter" method="POST" target="hiddenFrame">
    <div class="d-flex flex-column flex-shrink-0 p-3" style="width: 300px; position: absolute; left: 0">
        <button id='genres-toggle-button' class="btn btn-toggle align-items-center rounded collapsed" data-bs-toggle="collapse" data-bs-target="#genres-list" type="button" onclick="toggleGenres()">Genres</button>
        <div class="form-check collapse" id="genres-list">
            {{ range .GenreOptions }}
                <input id="{{ .ID }}" class="form-check-input filter-checkbox" type="checkbox" name="genre" value="{{ .Label }}" onchange="checkboxUpdater(event)" />
                <label>{{ .Label }}</label><br />
            {{ end }}
        </div>
        <div>Episode duration:</div>
        <div data-role="rangeslider">
            <input id="input-duration-min" type="range" name="duration-min" id="duration-min" value="0" min="0" max="163" oninput="durationUpdater(event)">
            <label id="label-duration-min" for="duration-min">at least 0 min.</label><br />
            <input id="input-duration-max" type="range" name="duration-max" id="duration-max" value="163" min="0" max="163" oninput="durationUpdater(event)">
            <label id="label-duration-max" for="duration-max">at most 163 min.</label><br />
        </div>
        <div>Episode duration (category):</div>
        <div>
            {{ range .DurationCategories }}
                <input id="input-duration-cat-{{ .ID }}" class="filter-checkbox" type="checkbox" name="duration-cat" value="{{ .Label }}" onchange="checkboxUpdater(event)">
                <label>{{ .Label }}</label><br />
            {{ end }}
        </div>
        <div>Aired date:</div>
        <div data-role="rangeslider">
            <input id="input-aired-min" type="range" name="aired-min" id="aired-min" value="1942" min="1942" max="2019" oninput="airedUpdater(event)">
            <label id="label-aired-min" for="aired-min">from 1942 y</label><br />
            <input id="input-aired-max" type="range" name="aired-max" id="aired-max" value="2019" min="1942" max="2019" oninput="airedUpdater(event)">
            <label id="label-aired-max" for="aired-max">until 2019 y</label><br />
        </div>
        <div>Types:</div>
        <div>
            {{ range .TypeOptions }}
                <input id="{{ .ID }}" class="form-check-input filter-checkbox" type="checkbox" name="type" value="{{ .Label }}" onchange="checkboxUpdater(event)" />
                <Label>{{ .Label }}</Label><br />
            {{ end }}
        </div>
        <input class="btn btn-secondary" type="submit" value="apply" />
        <button class="btn btn-outline-danger" type="button" onclick="clearFilters()">clear all</button>
    </div>
</form>

<script>
window.addEventListener('load', function(event) {
    // load toggle states for genres
    if (localStorage.getItem('toggle-genres') == 'true') {
        document.querySelector('#genres-list').classList.add('show')
        document.querySelector('#genres-toggle-button').ariaExpanded = true
    }

    document.querySelector('#filter-form').addEventListener('submit', function(event) {
        location.reload()
    })

    for (let inp of document.querySelectorAll('.filter-checkbox')) {
        inp.checked = localStorage.getItem(inp.id) == 'true'
    }

    const durMin = document.querySelector('#input-duration-min').value = parseInt(localStorage.getItem('duration-min') || '0')
    const durMax = document.querySelector('#input-duration-max').value = parseInt(localStorage.getItem('duration-max') || '163')
    document.querySelector('#label-duration-min').innerText = `at least ${durMin} min.`
    document.querySelector('#label-duration-max').innerText = `at most ${durMax} min.`

    const airedMin = document.querySelector('#input-aired-min').value = parseInt(localStorage.getItem('aired-min') || '1942')
    const airedMax = document.querySelector('#input-aired-max').value = parseInt(localStorage.getItem('aired-max') || '2019')
    document.querySelector('#label-aired-min').innerText = `from ${airedMin} y.`
    document.querySelector('#label-aired-max').innerText = `until ${airedMax} y.`
})

function toggleGenres(event) {
    const shown = document.querySelector('#genres-toggle-button').ariaExpanded
    localStorage.setItem('toggle-genres', shown)
}

function checkboxUpdater(event) {
    localStorage.setItem(event.target.id, event.target.checked)
}

function durationUpdater(event) {
    const minRange = document.querySelector('#input-duration-min').value
    const maxRange = document.querySelector('#input-duration-max').value
    const minLabel = document.querySelector('#label-duration-min')
    const maxLabel = document.querySelector('#label-duration-max')

    localStorage.setItem('duration-min', Math.min(minRange, maxRange))
    localStorage.setItem('duration-max', Math.max(minRange, maxRange))

    minLabel.innerText = `at least ${minRange} min.`
    maxLabel.innerText = `at most ${maxRange} min.`
}

function airedUpdater(event) {
    const minRange = document.querySelector('#input-aired-min').value
    const maxRange = document.querySelector('#input-aired-max').value

    localStorage.setItem('aired-min', Math.min(minRange, maxRange))
    localStorage.setItem('aired-max', Math.max(minRange, maxRange))

    document.querySelector('#label-aired-min').innerText = `from ${minRange} y.`
    document.querySelector('#label-aired-max').innerText = `until ${maxRange} y.`
}

function clearFilters() {
    for (let input of document.querySelectorAll('.filter-checkbox')) {
        input.checked = false
        localStorage.removeItem(input.id)
    }

    document.querySelector('#input-duration-min').value = 0
    document.querySelector('#input-duration-max').value = 163
    document.querySelector('#label-duration-min').innerText = `at least 0 min.`
    document.querySelector('#label-duration-max').innerText = `at most 163 min.`
    localStorage.removeItem('duration-min')
    localStorage.removeItem('duration-max')

    document.querySelector('#input-aired-min').value = 1942
    document.querySelector('#input-aired-max').value = 2019
    document.querySelector('#label-aired-min').innerText = `from 1942 y.`
    document.querySelector('#label-aired-max').innerText = `until 2019 y.`
    localStorage.removeItem('aired-min')
    localStorage.removeItem('aired-max')
}
</script>
{{ end }}
